// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  billboards Billboard[]
}

model Billboard {
  id        String    @id @default(uuid())
  name      String?
  address   String?
  postCode  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  customerId       String?
  customer         Customer?          @relation(fields: [customerId], references: [id], onDelete: Cascade)
  BillboardInPlace BillboardInPlace[]

  mapId String?
  map   Map?    @relation(fields: [mapId], references: [id], onDelete: Cascade)
}

model Place {
  id        String    @id @default(uuid())
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  mapId String?
  map   Map?    @relation(fields: [mapId], references: [id], onDelete: Cascade)

  BillboardInPlace BillboardInPlace[]
}

model BillboardInPlace {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  billboardId String?
  billboard   Billboard? @relation(fields: [billboardId], references: [id], onDelete: Cascade)

  placeId String?
  place   Place?  @relation(fields: [placeId], references: [id], onDelete: Cascade)
}

model Map {
  id        String    @id @default(uuid())
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?

  geoJson          Json

  Place            Place[]
  Billboard        Billboard[]
}
