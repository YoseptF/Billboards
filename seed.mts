import { SnapletClient } from '@snaplet/seed';
import { faker } from '@faker-js/faker/locale/es_MX'

// This is a basic example generated by Snaplet to start you off, check out the docs for where to go from here
// * For more on getting started with @snaplet/seed: https://docs.snaplet.dev/getting-started/quick-start/seed
// * For a more detailed reference: https://docs.snaplet.dev/core-concepts/seed

const snaplet = new SnapletClient({
  dryRun: process.env.DRY !== '0',
});

// Clears all existing data in the database, but keep the structure
await snaplet.$resetDatabase()

await snaplet.users([{
  instance_id: "00000000-0000-0000-0000-000000000000",
  id: "0a830161-2854-4b36-84a3-94ccf9184257",
  aud: "authenticated",
  role: "authenticated",
  email: "yosept.flores@gmail.com",
  encrypted_password: "$2a$10$NnBBS1xoBsI20zhGSZdhYuJuq4jSp1It7E7KdVrnlG2C.85ZLxYy6",
  email_confirmed_at: "2023-12-31 00:42:35.097475+00",
  invited_at: null,
  confirmation_token: "",
  confirmation_sent_at: null,
  recovery_token: "",
  recovery_sent_at: null,
  email_change: "",
  email_change_token_new: "",
  email_change_sent_at: null,
  last_sign_in_at: null,
  raw_app_meta_data: {"provider":"email","providers":["email"]},
  raw_user_meta_data: {},
  is_super_admin: null,
  created_at: "2023-12-31 00:42:35.093882+00",
  updated_at: "2023-12-31 00:42:35.097616+00",
  phone: null,
  phone_confirmed_at: null,
  phone_change: "",
  phone_change_token: "",
  email_change_token_current: "",
  email_change_confirm_status: 0,
  banned_until: null,
  reauthentication_token: "",
  reauthentication_sent_at: null,
  is_sso_user: false,
  deleted_at: null,
  phone_change_sent_at: null,
}])
await snaplet.$pipe([
  snaplet.$merge([
    snaplet.Customer([{
      email: "yosept.flores@mail.com",
      name: "Joseph Flores",
      deletedAt: null,
      updatedAt: null,
    }]),
    snaplet.Customer(x => x(3, () => {
      const name = faker.person.fullName()
      return {
        email: faker.internet.email({ firstName: name.split(' ')[0], lastName: name.split(' ')[1] }),
        name,
        deletedAt: null,
        updatedAt: null,
      }
    }
    )),
  ]),
  snaplet.Billboard(x => x(15, () => ({
    address: faker.location.streetAddress(),
    postCode: faker.location.zipCode(),
    deletedAt: null,
    updatedAt: null,
  })), { autoConnect: true }),
]);